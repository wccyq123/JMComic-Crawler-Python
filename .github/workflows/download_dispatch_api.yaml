name: 下载JM本子 (dispatch API)

on:
  repository_dispatch:
    types: [trigger-by-api] # 可自定义事件类型


jobs:
  crawler:
    runs-on: ubuntu-latest
    env:
      # 工作流输入
      JM_ALBUM_IDS: ${{ github.event.client_payload.JM_ALBUM_IDS }}
      JM_PHOTO_IDS: ${{ github.event.client_payload.JM_PHOTO_IDS }}
      DIR_RULE: ${{ github.event.client_payload.DIR_RULE }}
      CLIENT_IMPL: ${{ github.event.client_payload.CLIENT_IMPL }}
      ZIP_NAME: ${{ github.event.client_payload.ZIP_NAME }}
      UPLOAD_NAME: ${{ github.event.client_payload.UPLOAD_NAME }}
      IMAGE_SUFFIX: ${{ github.event.client_payload.IMAGE_SUFFIX }}

      # 登录相关secrets
      JM_USERNAME: ${{ secrets.JM_USERNAME }}
      JM_PASSWORD: ${{ secrets.JM_PASSWORD }}

      # 邮件相关secrets
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      EMAIL_TO: ${{ secrets.EMAIL_TO }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      EMAIL_TITLE: ${{ secrets.EMAIL_TITLE }}
      EMAIL_CONTENT: ${{ secrets.EMAIL_CONTENT }}

      # 固定值
      JM_DOWNLOAD_DIR: /home/runner/work/jmcomic/download/

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependency
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: 安装jmcomic（pip）
        if: ${{ github.ref != 'refs/heads/dev' }}
        run: |
          pip install jmcomic -i https://pypi.org/project --upgrade

      - name: 安装jmcomic（local）
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          pip install -e ./

      - name: 运行下载脚本
        run: |
          cd ./usage/
          python workflow_download.py

      - name: 压缩文件
        run: |
          cd $JM_DOWNLOAD_DIR
          tar -zcvf "../$ZIP_NAME" ./
          mv "../$ZIP_NAME" .

      - name: Notify backend
        run: |
          curl -X POST https://download-hon-backend.vercel.app/downloadComplete \
            -H "Content-Type: application/json" \
            -d '{
              "JM_ALBUM_IDS": "${{ github.event.client_payload.JM_ALBUM_IDS }}",
              "userId":"${{ github.event.client_payload.userId }}",
              "runId": "${{ github.run_id }}"
            }'

      - name: 上传结果
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.UPLOAD_NAME }}
          path: ${{ env.JM_DOWNLOAD_DIR }}/${{ env.ZIP_NAME }}
          if-no-files-found: error
          retention-days: 90
